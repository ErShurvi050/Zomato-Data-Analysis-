# Zomato-Data-Analysis-

#Step 1: Import necessary Python libraries.
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

#Step 2: Create the data frame.
dataframe = pd.read_csv("Zomato data .csv")
print(dataframe.head())

#Before proceeding, let’s convert the data type of the “rate” column to float and remove the denominator.
  def handleRate(value):
	value=str(value).split('/')
	value=value[0];
	return float(value)

dataframe['rate']=dataframe['rate'].apply(handleRate)
print(dataframe.head())

#To obtain a summary of the data frame, you can use the following code:-
dataframe.info()

#We will now examine the data frame for the presence of any null values. This stage scans each column to see whether there are any missing values or empty cells. This allows us to detect any potential data gaps that must be addressed.
#There is no NULL value in dataframe.
sns.countplot(x=dataframe['listed_in(type)'])
plt.xlabel("Type of restaurant")

#Conclusion: The majority of the restaurants fall into the dining category.
grouped_data = dataframe.groupby('listed_in(type)')['votes'].sum()
result = pd.DataFrame({'votes': grouped_data})
plt.plot(result, c="green", marker="o")
plt.xlabel("Type of restaurant", c="red", size=20)
plt.ylabel("Votes", c="red", size=20)

#Conclusion: Dining restaurants are preferred by a larger number of individuals.
#Now we will determine the restaurant’s name that received the maximum votes based on a given dataframe.
max_votes = dataframe['votes'].max()
restaurant_with_max_votes = dataframe.loc[dataframe['votes'] == max_votes, 'name']

print("Restaurant(s) with the maximum votes:")
print(restaurant_with_max_votes)

#Let’s explore the online_order column.
sns.countplot(x=data['online_order'])

#Let’s explore the rate column.
plt.hist(dataframe['rate'],bins=5)
plt.title("Ratings Distribution")
plt.show()

#Let’s explore the approx_cost(for two people) column.
couple_data=dataframe['approx_cost(for two people)']
sns.countplot(x=couple_data)

#Now we will examine whether online orders receive higher ratings than offline orders.
plt.figure(figsize = (6,6))
sns.boxplot(x = 'online_order', y = 'rate', data = dataframe)

#Offline orders received lower ratings in comparison to online orders, which obtained excellent ratings.
pivot_table = dataframe.pivot_table(index='listed_in(type)', columns='online_order', aggfunc='size', fill_value=0)
sns.heatmap(pivot_table, annot=True, cmap="YlGnBu", fmt='d')
plt.title("Heatmap")
plt.xlabel("Online Order")
plt.ylabel("Listed In (Type)")
plt.show()

